{
    "version": "2.0.0",
    "tasks": [
        {
            "label": "CMake: Configure Debug (macOS)",
            "type": "shell",
            "command": "cmake",
            "args": [
                "-S",
                "${workspaceFolder}",
                "-B",
                "${workspaceFolder}/build",
                "-DCMAKE_BUILD_TYPE=Debug",
                "-G",
                "Ninja",
                "-DCMAKE_C_COMPILER=clang",
                "-DCMAKE_CXX_COMPILER=clang++"
            ],
            "group": {
                "kind": "build",
                "isDefault": false
            },
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared"
            },
            "problemMatcher": [
                "$gcc"
            ],
            "detail": "Configure CMake project for Debug build with Clang"
        },
        {
            "label": "CMake: Configure Release (macOS)",
            "type": "shell",
            "command": "cmake",
            "args": [
                "-S",
                "${workspaceFolder}",
                "-B",
                "${workspaceFolder}/build",
                "-DCMAKE_BUILD_TYPE=Release",
                "-G",
                "Ninja",
                "-DCMAKE_C_COMPILER=clang",
                "-DCMAKE_CXX_COMPILER=clang++"
            ],
            "group": {
                "kind": "build",
                "isDefault": false
            },
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared"
            },
            "problemMatcher": [
                "$gcc"
            ],
            "detail": "Configure CMake project for Release build with Clang"
        },
        {
            "label": "CMake: Build Debug (macOS)",
            "type": "shell",
            "command": "cmake",
            "args": [
                "--build",
                "${workspaceFolder}/build",
                "--config",
                "Debug",
                "--parallel"
            ],
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared"
            },
            "problemMatcher": [
                "$gcc"
            ],
            "dependsOn": "CMake: Configure Debug (macOS)",
            "detail": "Build the project in Debug mode with Clang"
        },
        {
            "label": "CMake: Build Release (macOS)",
            "type": "shell",
            "command": "cmake",
            "args": [
                "--build",
                "${workspaceFolder}/build",
                "--config",
                "Release",
                "--parallel"
            ],
            "group": {
                "kind": "build",
                "isDefault": false
            },
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared"
            },
            "problemMatcher": [
                "$gcc"
            ],
            "dependsOn": "CMake: Configure Release (macOS)",
            "detail": "Build the project in Release mode with Clang"
        },
        {
            "label": "CMake: Clean (macOS)",
            "type": "shell",
            "command": "cmake",
            "args": [
                "--build",
                "${workspaceFolder}/build",
                "--target",
                "clean"
            ],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared"
            },
            "detail": "Clean build artifacts"
        },
        {
            "label": "Run Tests (macOS)",
            "type": "shell",
            "command": "${workspaceFolder}/run_all_tests.sh",
            "group": "test",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared"
            },
            "detail": "Run all project tests on macOS"
        },
        {
            "label": "Generate Compile Commands (macOS)",
            "type": "shell",
            "command": "cmake",
            "args": [
                "--build",
                "${workspaceFolder}/build",
                "--target",
                "copy-compile-commands"
            ],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "silent",
                "focus": false,
                "panel": "shared"
            },
            "detail": "Generate and copy compile_commands.json to project root"
        },
        {
            "label": "Install Homebrew Dependencies",
            "type": "shell",
            "command": "brew",
            "args": [
                "install",
                "ninja",
                "llvm"
            ],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared"
            },
            "detail": "Install required build tools via Homebrew"
        },
        {
            "label": "Create App Bundle (macOS)",
            "type": "shell",
            "command": "cmake",
            "args": [
                "--build",
                "${workspaceFolder}/build",
                "--target",
                "install"
            ],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared"
            },
            "dependsOn": "CMake: Build Release (macOS)",
            "detail": "Create macOS .app bundle"
        }
    ]
}