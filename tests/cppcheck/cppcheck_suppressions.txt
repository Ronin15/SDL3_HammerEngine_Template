# Cppcheck Suppressions File for SDL3_ForgeEngine_Template
# This file suppresses false positives and irrelevant warnings

# Suppress missing include warnings for project headers
missingInclude:*/core/Logger.hpp
missingInclude:*/core/GameEngine.hpp
missingInclude:*/managers/InputManager.hpp
missingInclude:*/managers/UIManager.hpp
missingInclude:*/managers/AIManager.hpp
missingInclude:*/managers/FontManager.hpp
missingInclude:*/managers/TextureManager.hpp
missingInclude:*/managers/SoundManager.hpp
missingInclude:*/managers/EventManager.hpp
missingInclude:*/managers/SaveGameManager.hpp
missingInclude:*/ai/AIBehavior.hpp
missingInclude:*/ai/behaviors/ChaseBehavior.hpp
missingInclude:*/ai/behaviors/PatrolBehavior.hpp
missingInclude:*/ai/behaviors/WanderBehavior.hpp
missingInclude:*/events/NPCSpawnEvent.hpp
missingInclude:*/entities/playerStates/PlayerRunningState.hpp
missingInclude:*/gameStates/EventDemoState.hpp
missingInclude:*/gameStates/AIDemoState.hpp
missingInclude:*/gameStates/MainMenuState.hpp
missingInclude:*/gameStates/UIExampleState.hpp
missingInclude:*/gameStates/OverlayDemoState.hpp
missingInclude:*/utils/Vector2D.hpp
missingInclude:*/utils/BinarySerializer.hpp

# Suppress library function checks for logging macros
checkLibraryFunction:GAMEENGINE_*
checkLibraryFunction:TEXTURE_*
checkLibraryFunction:SOUND_*
checkLibraryFunction:FONT_*
checkLibraryFunction:AI_*
checkLibraryFunction:EVENT_*
checkLibraryFunction:INPUT_*
checkLibraryFunction:UI_*
checkLibraryFunction:SAVEGAME_*
checkLibraryFunction:GAMESTATE_*
checkLibraryFunction:GAMELOOP_*
checkLibraryFunction:THREADSYSTEM_*
checkLibraryFunction:HAMMER_*

# Suppress library function checks for singleton patterns
checkLibraryFunction:*Instance
checkLibraryFunction:GameEngine::Instance
checkLibraryFunction:AIManager::Instance
checkLibraryFunction:UIManager::Instance
checkLibraryFunction:FontManager::Instance
checkLibraryFunction:InputManager::Instance
checkLibraryFunction:SoundManager::Instance
checkLibraryFunction:TextureManager::Instance
checkLibraryFunction:EventManager::Instance
checkLibraryFunction:ThreadSystem::Instance

# Suppress library function checks for custom utility classes
checkLibraryFunction:Vector2D*
checkLibraryFunction:getPosition
checkLibraryFunction:getX
checkLibraryFunction:getY
checkLibraryFunction:lengthSquared
checkLibraryFunction:setX
checkLibraryFunction:setY

# Suppress library function checks for common engine patterns
checkLibraryFunction:getPlayerReference
checkLibraryFunction:isPlayerValid
checkLibraryFunction:getGameStateManager
checkLibraryFunction:setState
checkLibraryFunction:registerBehavior
checkLibraryFunction:hasBehavior
checkLibraryFunction:wasKeyPressed
checkLibraryFunction:isKeyDown
checkLibraryFunction:createLabel
checkLibraryFunction:enableTextBackground
checkLibraryFunction:drawRect
checkLibraryFunction:drawBorder
checkLibraryFunction:getComponent
checkLibraryFunction:checkLineOfSight
checkLibraryFunction:onTargetReached
checkLibraryFunction:onTargetLost
checkLibraryFunction:handleNoLineOfSight
checkLibraryFunction:setActive
checkLibraryFunction:init
checkLibraryFunction:getCurrentTimeNanos

# Suppress SDL3 library function checks
checkLibraryFunction:SDL_GetError
checkLibraryFunction:SDL_*

# Suppress standard library function checks
checkLibraryFunction:std::filesystem::exists
checkLibraryFunction:std::exception::what

# Suppress container method warnings
checkLibraryFunction:size
checkLibraryFunction:empty
checkLibraryFunction:begin
checkLibraryFunction:end
checkLibraryFunction:push_back
checkLibraryFunction:emplace_back
checkLibraryFunction:insert
checkLibraryFunction:erase
checkLibraryFunction:find

# Suppress smart pointer method warnings
checkLibraryFunction:reset
checkLibraryFunction:release
checkLibraryFunction:get
checkLibraryFunction:operator->
checkLibraryFunction:operator*

# Suppress template instantiation warnings
unusedFunction:*template*
unusedFunction:*<anonymous>*

# Suppress warnings for benchmark/test code
unusedFunction:*benchmark*
unusedFunction:*test*
unusedFunction:*Test*
unusedFunction:*BOOST_*

# Suppress warnings for generated/external code directories
*:*/build/*
*:*/temp/*
*:*/.cache/*
*:*/test_results/*
*:*/bin/*
*:*/compile_commands.json
*:*/cppcheck_results.xml

# Variables used in debug logging that are conditionally compiled
unreadVariable:*/InputManager.cpp:303
unreadVariable:*/InputManager.cpp:304
unreadVariable:*/InputManager.cpp:305
unreadVariable:*/InputManager.cpp:306
unreadVariable:*/InputManager.cpp:307
unreadVariable:*/InputManager.cpp:308
unreadVariable:*/InputManager.cpp:309
unreadVariable:*/InputManager.cpp:403
unreadVariable:*/InputManager.cpp:404
unreadVariable:*/InputManager.cpp:405
unreadVariable:*/InputManager.cpp:406
unreadVariable:*/InputManager.cpp:407
unreadVariable:*/InputManager.cpp:408
unreadVariable:*/InputManager.cpp:409
unreadVariable:*/InputManager.cpp:410
unreadVariable:*/InputManager.cpp:411
unreadVariable:*/InputManager.cpp:412
unreadVariable:*/InputManager.cpp:413
unreadVariable:*/InputManager.cpp:414
unreadVariable:*/InputManager.cpp:415
unreadVariable:*/InputManager.cpp:416
unreadVariable:*/InputManager.cpp:417
unreadVariable:*/InputManager.cpp:418

# Variables used in debug builds only
variableScope:*/ThreadSystem.hpp:572
variableScope:*/ThreadSystem.hpp:584
variableScope:*/FontManager.cpp:72
variableScope:*/FontManager.cpp:117
variableScope:*/SoundManager.cpp:76
variableScope:*/SoundManager.cpp:148

# Variables used only in debug logging macros (removedCount)
unreadVariable:*/ParticleManager.cpp:1077
unreadVariable:*/ParticleManager.cpp:1210
unreadVariable:*/ParticleManager.cpp:1288
unreadVariable:*/ParticleManager.cpp:1873

# Variables used only in debug logging macros (axisName, buttonName)
unreadVariable:*/InputManager.cpp:310
unreadVariable:*/InputManager.cpp:311
unreadVariable:*/InputManager.cpp:312
unreadVariable:*/InputManager.cpp:313
unreadVariable:*/InputManager.cpp:314
unreadVariable:*/InputManager.cpp:315
unreadVariable:*/InputManager.cpp:419
unreadVariable:*/InputManager.cpp:420
unreadVariable:*/InputManager.cpp:421
unreadVariable:*/InputManager.cpp:422
unreadVariable:*/InputManager.cpp:423
unreadVariable:*/InputManager.cpp:424

# Variables used only in debug builds or debug logging
unreadVariable:*/GameEngine.cpp:666
unreadVariable:*/GameEngine.cpp:674
unreadVariable:*/AIManager.cpp:235
unreadVariable:*/AIManager.cpp:327
unreadVariable:*/ParticleManager.cpp:1291
unreadVariable:*/GameStateManager.cpp:39
unreadVariable:*/InventoryComponent.cpp:547
unreadVariable:*/InventoryComponent.cpp:792
unreadVariable:*/InventoryComponent.cpp:813

# Debug/profiling utility functions kept for development
unusedFunction:*/ThreadSystem.hpp:337

# Performance suggestions that may be intentionally ignored for readability
useStlAlgorithm:*/InventoryComponent.cpp:746

# Conditions that are always false due to current implementation but kept for defensive programming
knownConditionTrueFalse:*/GuardBehavior.cpp:417
knownConditionTrueFalse:*/EventManager.cpp:448
knownConditionTrueFalse:*/EventManager.cpp:453

# Variable shadowing in demo code (acceptable in demo contexts)
shadowVariable:*/EventDemoState.cpp:1002

# Const reference opportunities that would break functionality
constVariableReference:*/GamePlayState.cpp:108
constVariableReference:*/PauseState.cpp:78

# Suppress common external library style issues
# JsonReader library - non-explicit constructors are intentional for API usability
noExplicitConstructor:*/utils/JsonReader.hpp:60
noExplicitConstructor:*/utils/JsonReader.hpp:61  
noExplicitConstructor:*/utils/JsonReader.hpp:62
